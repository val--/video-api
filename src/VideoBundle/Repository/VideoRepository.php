<?php

namespace VideoBundle\Repository;
use Doctrine\ORM\EntityRepository;
/**
 * VideoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VideoRepository extends EntityRepository
{
	public function countVideos($paramFetcher){

		$qb = $this->createQueryBuilder('v');
        $qb->select('v');
        $qb->select('count(v.id)');
        $qb = $this->withParams($qb, $paramFetcher);
        $qb->setMaxResults(1);
        return $qb->getQuery()->getOneOrNullResult();
	}

	public function getVideos($paramFetcher){

		$realisator = $paramFetcher->get('realisator');
    	$from = $paramFetcher->get('from');
    	$to = $paramFetcher->get('to');

        $qb = $this->createQueryBuilder('v');
        $qb->select('v');

 		$qb = $this->withParams($qb, $paramFetcher);

        return $qb->getQuery()->getResult();
	}

	// Paramètres réutilisables
    public function withParams(\Doctrine\ORM\QueryBuilder $qb, $paramFetcher)
    {

		$realisator = $paramFetcher->get('realisator');
    	$from = $paramFetcher->get('from');
    	$to = $paramFetcher->get('to');

        if ($realisator != "") {
            $qb->where('v.realisator LIKE :realisator')
            ->setParameter('realisator', $realisator.'%');
        }

        if ($from != "" && $to != "") {
        	$qb->andwhere('v.date BETWEEN :from AND :to')
        	->setParameter('from', $from)
            ->setParameter('to', $to);
        }

      return $qb;
    }


}
